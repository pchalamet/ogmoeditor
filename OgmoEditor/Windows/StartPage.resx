<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>